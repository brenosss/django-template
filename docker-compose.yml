services:
  redis:
    image: redis:6.0-alpine
    container_name: redis
    ports:
      - "6379:6379"

  web:
    build:
      context: .
    container_name: django_server
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  outbox_publisher:
    build:
      context: .
    container_name: outbox_publisher
    command: >
      sh -c "python manage.py publish"
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  orders_worker:
    build:
      context: .
    container_name: orders_server
    command: >
      sh -c "python manage.py subscribe 'orders.callbacks.callback' '/queue/create_order' 'create_order'"
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery-worker:
    build:
      context: .
    container_name: celery_worker
    command: celery -A djangotemplate worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery-beat: # celery scheduller tasks
    build:
      context: .
    container_name: celery_beat
    command: celery -A djangotemplate beat --loglevel=DEBUG --schedule=/app/celerybeat-schedule
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery-flower:
    build:
      context: .
    container_name: celery_flower
    ports:
      - "5555:5555"
    command: celery -A djangotemplate flower --port=5555
    volumes:
      - .:/app
    depends_on:
      - celery-worker
      - redis
      - celery-beat
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    volumes:
      - ${HOME}/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management  # The management image includes the management plugin by default
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"  # RabbitMQ main port
      - "15672:15672"  # RabbitMQ management UI port
      - "61613:61613"  # RabbitMQ STOMP port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    command: >
      sh -c "
      rabbitmq-plugins enable rabbitmq_management &&
      rabbitmq-plugins enable rabbitmq_stomp &&
      rabbitmq-server
      "

volumes:
  redis-data:
  rabbitmq_data:
    driver: local
